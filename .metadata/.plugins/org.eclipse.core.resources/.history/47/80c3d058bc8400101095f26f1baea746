#ifndef STM32F4XX_CUS_GPIO_H
#define STM32F4XX_CUS_GPIO_H

#include "stm32f4xx_cus.h"

typedef struct {
	__IO uint32_t MODER; /*!< GPIO port mode register,               Address offset: 0x00 */
	__IO uint32_t OTYPER; /*!< GPIO port output type register,        Address offset: 0x04 */
	__IO uint32_t OSPEEDR; /*!< GPIO port output speed register,       Address offset: 0x08 */
	__IO uint32_t PUPDR; /*!< GPIO port pull-up/pull-down register,  Address offset: 0x0C */
	__IO uint32_t IDR; /*!< GPIO port input data register,         Address offset: 0x10 */
	__IO uint32_t ODR; /*!< GPIO port output data register,        Address offset: 0x14 */
	__IO uint32_t BSRR; /*!< GPIO port bit set/reset register,      Address offset: 0x18 */
	__IO uint32_t LCKR; /*!< GPIO port configuration lock register, Address offset: 0x1C */
	__IO uint32_t AFR[2]; /*!< GPIO alternate function registers,     Address offset: 0x20-0x24 */
/*!< AFR[0] = AFRL (pins 0-7), AFR[1] = AFRH (pins 8-15) */
} GPIO_TypeDef;

typedef struct {
	GPIO_TypeDef *GPIOX;
	uint8_t mode;
	uint8_t pin_number;
	uint8_t pull_up_pull_down;
	uint8_t output_speed;
	uint8_t output_type;
	uint8_t alternate_function_select;
} GPIO_Handle_TypeDef;

// This is pointer type GPIO_TypeDef
#define AHB1_BASE_ADDR 0x40020000
#define GPIO_OFFSET_ADDR 0x400
#define GPIOA (GPIO_TypeDef*)AHB1_BASE_ADDR
#define GPIOB (GPIO_TypeDef*)(AHB1_BASE_ADDR + GPIO_OFFSET_ADDR)
#define GPIOC (GPIO_TypeDef*)(GPIOB + GPIO_OFFSET_ADDR)
#define GPIOD (GPIO_TypeDef*)(GPIOC + GPIO_OFFSET_ADDR)
#define GPIOE (GPIO_TypeDef*)(GPIOD + GPIO_OFFSET_ADDR)
#define GPIOF (GPIO_TypeDef*)(GPIOE + GPIO_OFFSET_ADDR)
#define GPIOG (GPIO_TypeDef*)(GPIOF + GPIO_OFFSET_ADDR)
#define GPIOH (GPIO_TypeDef*)(GPIOG + GPIO_OFFSET_ADDR)
#define GPIOI (GPIO_TypeDef*)(GPIOH + GPIO_OFFSET_ADDR)
#define GPIOJ (GPIO_TypeDef*)(GPIOI + GPIO_OFFSET_ADDR)
#define GPIOK (GPIO_TypeDef*)(GPIOJ + GPIO_OFFSET_ADDR)

// GPIO Pins
#define GPIO_Pin_0 0
#define GPIO_Pin_1 1
#define GPIO_Pin_2 2
#define GPIO_Pin_3 3
#define GPIO_Pin_4 4
#define GPIO_Pin_5 5
#define GPIO_Pin_6 6
#define GPIO_Pin_7 7
#define GPIO_Pin_8 8
#define GPIO_Pin_9 9
#define GPIO_Pin_10 10
#define GPIO_Pin_11 11
#define GPIO_Pin_12 12
#define GPIO_Pin_13 13
#define GPIO_Pin_14 14
#define GPIO_Pin_15 15

// Mode
#define GPIO_Input_Mode 0x0
#define GPIO_Output_Mode 0x1
#define GPIO_Alt_Mode 0x2
#define GPIO_Analog_Mode 0x3

// PUPD
#define GPIO_No_PUPD 0x0
#define GPIO_PU 0x1
#define GPIO_PD 0x2

// Output type
#define GPIO_Output_PP 0x0
#define GPIO_Output OD 0x1

// GPIO Output Speed values
#define GPIO_SPEED_LOW        0x0U  // 00: Low speed
#define GPIO_SPEED_MEDIUM     0x1U  // 01: Medium speed
#define GPIO_SPEED_HIGH       0x2U  // 10: High speed
#define GPIO_SPEED_VERY_HIGH  0x3U  // 11: Very high speed

// Alternate function
#define AF0   0x0U
#define AF1   0x1U
#define AF2   0x2U
#define AF3   0x3U
#define AF4   0x4U
#define AF5   0x5U
#define AF6   0x6U
#define AF7   0x7U
#define AF8   0x8U
#define AF9   0x9U
#define AF10  0xAU
#define AF11  0xBU
#define AF12  0xCU
#define AF13  0xDU
#define AF14  0xEU
#define AF15  0xFU

// Function prototypes
void GPIO_INIT(GPIO_Handle_TypeDef *gpioHandle);
uint8_t GPIO_INPUT(GPIO_TypeDef *gpiox, uint8_t gpio_pins);
void GPIO_OUTPUT(GPIO_TypeDef *gpiox, uint8_t gpio_pins, uint8_t val);

#endif // STM32F4XX_CUS_GPIO_H
