#ifndef STM32F4XX_CUS_GPIO_H
#define STM32F4XX_CUS_GPIO_H

#include "stm32f4xx_cus.h"

typedef struct {
	__IO uint32_t MODER; /*!< GPIO port mode register,               Address offset: 0x00 */
	__IO uint32_t OTYPER; /*!< GPIO port output type register,        Address offset: 0x04 */
	__IO uint32_t OSPEEDR; /*!< GPIO port output speed register,       Address offset: 0x08 */
	__IO uint32_t PUPDR; /*!< GPIO port pull-up/pull-down register,  Address offset: 0x0C */
	__IO uint32_t IDR; /*!< GPIO port input data register,         Address offset: 0x10 */
	__IO uint32_t ODR; /*!< GPIO port output data register,        Address offset: 0x14 */
	__IO uint32_t BSRR; /*!< GPIO port bit set/reset register,      Address offset: 0x18 */
	__IO uint32_t LCKR; /*!< GPIO port configuration lock register, Address offset: 0x1C */
	__IO uint32_t AFR[2]; /*!< GPIO alternate function registers,     Address offset: 0x20-0x24 */
/*!< AFR[0] = AFRL (pins 0-7), AFR[1] = AFRH (pins 8-15) */
} GPIO_TypeDef;

typedef struct {
	GPIO_TypeDef *GPIOX;
	uint8_t pin_number;
	uint8_t mode;
	uint8_t pull_up_pull_down;
	uint8_t output_speed;
	uint8_t output_type;
	uint8_t alternate_function_select;
	uint8_t exti_select;
} GPIO_Handle_TypeDef;

// This is pointer type GPIO_TypeDef
#define AHB1_BASE_ADDR    0x40020000UL
#define GPIO_OFFSET_ADDR  0x400UL
#define GPIOA ((GPIO_TypeDef*)(AHB1_BASE_ADDR + (0 * GPIO_OFFSET_ADDR)))
#define GPIOB ((GPIO_TypeDef*)(AHB1_BASE_ADDR + (1 * GPIO_OFFSET_ADDR)))
#define GPIOC ((GPIO_TypeDef*)(AHB1_BASE_ADDR + (2 * GPIO_OFFSET_ADDR)))
#define GPIOD ((GPIO_TypeDef*)(AHB1_BASE_ADDR + (3 * GPIO_OFFSET_ADDR)))
#define GPIOE ((GPIO_TypeDef*)(AHB1_BASE_ADDR + (4 * GPIO_OFFSET_ADDR)))
#define GPIOF ((GPIO_TypeDef*)(AHB1_BASE_ADDR + (5 * GPIO_OFFSET_ADDR)))
#define GPIOG ((GPIO_TypeDef*)(AHB1_BASE_ADDR + (6 * GPIO_OFFSET_ADDR)))
#define GPIOH ((GPIO_TypeDef*)(AHB1_BASE_ADDR + (7 * GPIO_OFFSET_ADDR)))
#define GPIOI ((GPIO_TypeDef*)(AHB1_BASE_ADDR + (8 * GPIO_OFFSET_ADDR)))
#define GPIOJ ((GPIO_TypeDef*)(AHB1_BASE_ADDR + (9 * GPIO_OFFSET_ADDR)))
#define GPIOK ((GPIO_TypeDef*)(AHB1_BASE_ADDR + (10 * GPIO_OFFSET_ADDR)))

// GPIO Pin Numbers
#define GPIO_PIN_0     0U
#define GPIO_PIN_1     1U
#define GPIO_PIN_2     2U
#define GPIO_PIN_3     3U
#define GPIO_PIN_4     4U
#define GPIO_PIN_5     5U
#define GPIO_PIN_6     6U
#define GPIO_PIN_7     7U
#define GPIO_PIN_8     8U
#define GPIO_PIN_9     9U
#define GPIO_PIN_10    10U
#define GPIO_PIN_11    11U
#define GPIO_PIN_12    12U
#define GPIO_PIN_13    13U
#define GPIO_PIN_14    14U
#define GPIO_PIN_15    15U

// GPIO Mode definitions
#define GPIO_MODE_INPUT      0x0U  // 00: Input mode
#define GPIO_MODE_OUTPUT     0x1U  // 01: Output mode
#define GPIO_MODE_AF         0x2U  // 10: Alternate function mode
#define GPIO_MODE_ANALOG     0x3U  // 11: Analog mode
#define GPIO_MODE_INTERRUPT_RISING 0x4U
#define GPIO_MODE_INTERRUPT_FALLING 0x5U
#define GPIO_MODE_INTERRUPT_CHANGE 0x6U

// GPIO Pull-Up/Pull-Down configuration
#define GPIO_PUPD_NONE   0x0U  // 00: No Pull-up, no Pull-down
#define GPIO_PUPD_PU     0x1U  // 01: Pull-up
#define GPIO_PUPD_PD     0x2U  // 10: Pull-down

// GPIO Output Type
#define GPIO_OUTPUT_TYPE_PP   0x0U  // 0: Push-Pull
#define GPIO_OUTPUT_TYPE_OD   0x1U  // 1: Open-Drain

// GPIO Output Speed values
#define GPIO_OUTPUT_SPEED_LOW        0x0U  // 00: Low speed
#define GPIO_OUTPUT_SPEED_MEDIUM     0x1U  // 01: Medium speed
#define GPIO_OUTPUT_SPEED_HIGH       0x2U  // 10: High speed
#define GPIO_OUTPUT_SPEED_VERY_HIGH  0x3U  // 11: Very high speed

// Alternate function
#define AF0   0x0U
#define AF1   0x1U
#define AF2   0x2U
#define AF3   0x3U
#define AF4   0x4U
#define AF5   0x5U
#define AF6   0x6U
#define AF7   0x7U
#define AF8   0x8U
#define AF9   0x9U
#define AF10  0xAU
#define AF11  0xBU
#define AF12  0xCU
#define AF13  0xDU
#define AF14  0xEU
#define AF15  0xFU

// Function prototypes
void GPIO_INIT(GPIO_Handle_TypeDef *gpioHandle);
uint8_t GPIO_INPUT(GPIO_TypeDef *gpiox, uint8_t gpio_pins);
void GPIO_OUTPUT(GPIO_TypeDef *gpiox, uint8_t gpio_pins, uint8_t val);
void GPIO_TOGGLE(GPIO_TypeDef *gpiox, uint8_t gpio_pins);

#endif // STM32F4XX_CUS_GPIO_H
