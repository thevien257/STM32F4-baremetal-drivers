#ifndef INC_STM32F4XX_CUS_UART_H_
#define INC_STM32F4XX_CUS_UART_H_

#include "stm32f4xx_cus.h"
typedef struct {
	volatile uint32_t SR;      // USART Status Register,            offset: 0x00
	volatile uint32_t DR;      // USART Data Register,              offset: 0x04
	volatile uint32_t BRR;     // USART Baud Rate Register,         offset: 0x08
	volatile uint32_t CR1;     // USART Control Register 1,         offset: 0x0C
	volatile uint32_t CR2;     // USART Control Register 2,         offset: 0x10
	volatile uint32_t CR3;     // USART Control Register 3,         offset: 0x14
	volatile uint32_t GTPR;    // USART Guard Time and Prescaler,   offset: 0x18
} USART_TypeDef;

typedef struct {
	USART_TypeDef *USARTx;
	uint8_t oversampling_mode;
	uint8_t data_bits;
	uint8_t parity_control;
	uint8_t parity_selection;
	uint8_t stop_bits;
	uint32_t baud_rate;
	uint8_t usart_mode;
	uint8_t usart_cpol;
	uint8_t usart_cpha;
	uint8_t last_bit_clock_pulse;
	uint8_t usart_hardware_flow_control;
} USART_HandleTypedef;

typedef struct {
	uint8_t *txBuffer;
	uint8_t *rxBuffer;
	uint32_t txLen;
	uint32_t rxLen;
	uint8_t TxRxState;
} USART_HandleIT;

extern USART_HandleIT USART_handleIT;

// Interrupt macros
#define SPI_READY_IT 0
#define SPI_BUSY_TX_IT 1
#define SPI_BUSY_RX_IT 2
#define SPI_BUSY_TX_RX_IT 3

/* USART/UART Base Addresses */
/* APB2 Bus */
#define USART1_BASE 0x40011000U /* APB2 - 0x40011000 to 0x400113FF */
#define USART6_BASE 0x40011400U /* APB2 - 0x40011400 to 0x400117FF */

/* APB1 Bus */
#define USART2_BASE 0x40004400U /* APB1 - 0x40004400 to 0x400047FF */
#define USART3_BASE 0x40004800U /* APB1 - 0x40004800 to 0x40004BFF */
#define UART4_BASE  0x40004C00U /* APB1 - 0x40004C00 to 0x40004FFF */
#define UART5_BASE  0x40005000U /* APB1 - 0x40005000 to 0x400053FF */
#define UART7_BASE  0x40007800U /* APB1 - 0x40007800 to 0x40007BFF */
#define UART8_BASE  0x40007C00U /* APB1 - 0x40007C00 to 0x40007FFF */

/* USART/UART Peripheral Instances */
#define USART1 ((USART_TypeDef *) USART1_BASE)
#define USART2 ((USART_TypeDef *) USART2_BASE)
#define USART3 ((USART_TypeDef *) USART3_BASE)
#define UART4  ((USART_TypeDef *) UART4_BASE)
#define UART5  ((USART_TypeDef *) UART5_BASE)
#define USART6 ((USART_TypeDef *) USART6_BASE)
#define UART7  ((USART_TypeDef *) UART7_BASE)
#define UART8  ((USART_TypeDef *) UART8_BASE)

// Oversampling
#define USART_OVERSAMPLING_16 0
#define USART_OVERSAMPLING_8 1

// Word length
#define USART_8_DATA_BITS 0
#define USART_9_DATA_BITS 1

// Parity control
#define USART_PARITY_DISABLE 0
#define USART_PARITY_ENABLE 1

// Parity Selection
#define USART_EVEN_PARITY 0
#define USART_ODD_PARITY 1

// Stop bits
#define USART_1_STOP_BIT 00
#define USART_0_5_STOP_BIT 01
#define USART_2_STOP_BIT 10
#define USART_1_5_STOP_BIT 11

// Baudrate
/* USART Standard Baud Rates */
#define USART_BAUD_1200      1200      // 1.2 KBps
#define USART_BAUD_2400      2400      // 2.4 KBps
#define USART_BAUD_9600      9600      // 9.6 KBps
#define USART_BAUD_19200     19200     // 19.2 KBps
#define USART_BAUD_38400     38400     // 38.4 KBps
#define USART_BAUD_57600     57600     // 57.6 KBps
#define USART_BAUD_115200    115200    // 115.2 KBps
#define USART_BAUD_230400    230400    // 230.4 KBps
#define USART_BAUD_460800    460800    // 460.8 KBps
#define USART_BAUD_921600    921600    // 921.6 KBps
#define USART_BAUD_2000000   2000000   // 2 MBps
#define USART_BAUD_3000000   3000000   // 3 MBps

/* USART Mode Selection */
#define USART_MODE_ASYNC                    0x0  /* Asynchronous mode (default) */
#define USART_MODE_SYNC                     0x1  /* Synchronous mode (CLKEN = 1) */

/* USART Hardware Flow Control (CR3 - RTSE, CTSE) */
#define USART_HW_FLOW_CTRL_NONE             0x0  /* No hardware flow control */
#define USART_HW_FLOW_CTRL_RTS              0x1  /* RTS flow control (CR3_RTSE) */
#define USART_HW_FLOW_CTRL_CTS              0x2  /* CTS flow control (CR3_CTSE) */
#define USART_HW_FLOW_CTRL_RTS_CTS          0x3  /* RTS and CTS flow control */

/* USART Clock Polarity (CR2 - CPOL) - Synchronous mode only */
#define USART_POLARITY_LOW                  0x0  /* Clock polarity low */
#define USART_POLARITY_HIGH                 0x1  /* Clock polarity high (CR2_CPOL) */

/* USART Clock Phase (CR2 - CPHA) - Synchronous mode only */
#define USART_PHASE_1EDGE                   0x0  /* First clock transition */
#define USART_PHASE_2EDGE                   0x1  /* Second clock transition (CR2_CPHA) */

// Function prototypes
void USART_INIT(USART_HandleTypedef *usart_handle);
void USART_ENABLE(USART_HandleTypedef *usart_handle, uint8_t EnOrDis);
void UART_TRANSMIT_ENABLE(USART_HandleTypedef *usart_handle, uint8_t EnOrDis);
void USART_write(USART_HandleTypedef *usart_handle, uint8_t *data,
		uint32_t size);
void USART_read(USART_HandleTypedef *usart_handle, uint8_t *data, uint32_t size);

#endif /* INC_STM32F4XX_CUS_UART_H_ */
