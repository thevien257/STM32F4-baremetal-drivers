#ifndef INC_STM32F4XX_CUS_SPI_H_
#define INC_STM32F4XX_CUS_SPI_H_

#include "stm32f4xx_cus.h"

/**
 * @brief SPI Register Structure Definition
 * @note Based on register map with offsets from 0x00 to 0x20
 */
typedef struct {
	volatile uint32_t CR1; /**< SPI Control Register 1,           Address offset: 0x00 */
	volatile uint32_t CR2; /**< SPI Control Register 2,           Address offset: 0x04 */
	volatile uint32_t SR; /**< SPI Status Register,              Address offset: 0x08 */
	volatile uint32_t DR; /**< SPI Data Register,                Address offset: 0x0C */
	volatile uint32_t CRCPR; /**< SPI CRC Polynomial Register,      Address offset: 0x10 */
	volatile uint32_t RXCRCR; /**< SPI RX CRC Register,              Address offset: 0x14 */
	volatile uint32_t TXCRCR; /**< SPI TX CRC Register,              Address offset: 0x18 */
	volatile uint32_t I2SCFGR; /**< SPI I2S Configuration Register,   Address offset: 0x1C */
	volatile uint32_t I2SPR; /**< SPI I2S Prescaler Register,       Address offset: 0x20 */
} SPI_TypeDef;

typedef struct {
	SPI_TypeDef *SPIx;
	uint8_t spi_data_direction;
	uint8_t spi_frame_format;
	uint8_t spi_master_slave;
	uint8_t spi_clock_polarity;
	uint8_t spi_clock_phase;
	uint8_t spi_ssm;
	uint8_t spi_sclk_prescaler;
	uint8_t spi_nss_output_en;
} SPI_HandleTypedef;

/* SPI Base Addresses */
#define SPI1_BASE    0x40013000U  /* APB2 - 0x40013000 to 0x400133FF */
#define SPI2_BASE    0x40003800U  /* APB1 - 0x40003800 to 0x40003BFF (SPI2/I2S2) */
#define SPI3_BASE    0x40003C00U  /* APB1 - 0x40003C00 to 0x40003FFF (SPI3/I2S3) */
#define SPI4_BASE    0x40013400U  /* APB2 - 0x40013400 to 0x400137FF */
#define SPI5_BASE    0x40015000U  /* APB2 - 0x40015000 to 0x400153FF */
#define SPI6_BASE    0x40015400U  /* APB2 - 0x40015400 to 0x400157FF */

/* SPI Peripheral Instances */
#define SPI1         ((SPI_TypeDef *) SPI1_BASE)
#define SPI2         ((SPI_TypeDef *) SPI2_BASE)  /* Also supports I2S2 */
#define SPI3         ((SPI_TypeDef *) SPI3_BASE)  /* Also supports I2S3 */
#define SPI4         ((SPI_TypeDef *) SPI4_BASE)
#define SPI5         ((SPI_TypeDef *) SPI5_BASE)
#define SPI6         ((SPI_TypeDef *) SPI6_BASE)

// Mode Select
#define SPI_SIMPLEX_MODE_RX 0
#define SPI_SIPLEX_MODE_TX 1
#define SPI_HALF_DUPLEX_MODE 2
#define SPI_FULL_DUPLEX_MODE 3

// Master/Slave
#define SPI_MASTER_MODE 0
#define SPI_SLAVE_MODE 1

// Frame Format
#define SPI_8_BIT_FRAME_FORMAT 0
#define SPI_16_BIT_FRAME_FORMAT 1

// Clock polarity
#define SPI_IDLE_LOW 0
#define SPI_IDLE_HIGH 1

// Clock phase
#define SPI_DATA_CAPTURED_FIRST_CLOCK 0
#define SPI_DATA_CAPTURED_SECOND_CLOCK 1

// Software slave management
#define SPI_SOFTWARE_SLAVE_DIS 0
#define SPI_SOFTWARE_SLAVE_EN 1
#define SPI_NSS_OUTPUT_DIS 2
#define SPI_NSS_OUTPUT_EN 3

// Baud rate prescaler
#define SPI_PRES_2 0
#define SPI_PRES_4 1
#define SPI_PRES_8 2
#define SPI_PRES_16 3
#define SPI_PRES_32 4
#define SPI_PRES_64 5
#define SPI_PRES_128 6
#define SPI_PRES_256 7

void SPI_INIT(SPI_HandleTypedef *spi_handle);

#endif /* INC_STM32F4XX_CUS_SPI_H_ */
