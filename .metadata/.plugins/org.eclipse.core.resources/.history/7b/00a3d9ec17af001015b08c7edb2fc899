#ifndef INC_STM32F4XX_CUS_TIMER_H_
#define INC_STM32F4XX_CUS_TIMER_H_

#include <stm32f4xx_cus.h>

// TIM2 to TIM5 register structure
typedef struct {
	volatile uint32_t CR1;      // Control register 1,              Offset: 0x00
	volatile uint32_t CR2;      // Control register 2,              Offset: 0x04
	volatile uint32_t SMCR;     // Slave mode control register,     Offset: 0x08
	volatile uint32_t DIER;     // DMA/Interrupt enable register,   Offset: 0x0C
	volatile uint32_t SR;       // Status register,                 Offset: 0x10
	volatile uint32_t EGR;      // Event generation register,       Offset: 0x14
	volatile uint32_t CCMR1;    // Capture/Compare mode register 1, Offset: 0x18
	volatile uint32_t CCMR2;    // Capture/Compare mode register 2, Offset: 0x1C
	volatile uint32_t CCER;     // Capture/Compare enable register, Offset: 0x20
	volatile uint32_t CNT;      // Counter register,                Offset: 0x24
	volatile uint32_t PSC;      // Prescaler register,              Offset: 0x28
	volatile uint32_t ARR;      // Auto-reload register,            Offset: 0x2C
	uint32_t RESERVED1;         // Reserved,                        Offset: 0x30
	volatile uint32_t CCR1;     // Capture/Compare register 1,      Offset: 0x34
	volatile uint32_t CCR2;     // Capture/Compare register 2,      Offset: 0x38
	volatile uint32_t CCR3;     // Capture/Compare register 3,      Offset: 0x3C
	volatile uint32_t CCR4;     // Capture/Compare register 4,      Offset: 0x40
	uint32_t RESERVED2;         // Reserved,                        Offset: 0x44
	volatile uint32_t DCR;      // DMA control register,            Offset: 0x48
	volatile uint32_t DMAR;     // DMA address for full transfer,   Offset: 0x4C
	volatile uint32_t OR;       // Option register,                 Offset: 0x50
} TIM_TypeDef;

// Base address definitions
#define TIM2_BASE           0x40000000UL
#define TIM3_BASE           0x40000400UL
#define TIM4_BASE           0x40000800UL
#define TIM5_BASE           0x40000C00UL

// Peripheral declarations
// 16-bit (TIM3 and TIM4) or 32-bit (TIM2 and TIM5) up, down, up/down auto-reload counter.
#define TIM2                ((TIM_TypeDef *) TIM2_BASE)
#define TIM3                ((TIM_TypeDef *) TIM3_BASE)
#define TIM4                ((TIM_TypeDef *) TIM4_BASE)
#define TIM5                ((TIM_TypeDef *) TIM5_BASE)

// TIM10/11/13/14 register structure
typedef struct {
	volatile uint32_t CR1;      // Control register 1,              Offset: 0x00
	uint32_t RESERVED1;         // Reserved,                        Offset: 0x04
	volatile uint32_t SMCR;     // Slave mode control register,     Offset: 0x08
	volatile uint32_t DIER;     // DMA/Interrupt enable register,   Offset: 0x0C
	volatile uint32_t SR;       // Status register,                 Offset: 0x10
	volatile uint32_t EGR;      // Event generation register,       Offset: 0x14
	volatile uint32_t CCMR1;    // Capture/Compare mode register 1, Offset: 0x18
	uint32_t RESERVED2;         // Reserved,                        Offset: 0x1C
	volatile uint32_t CCER;     // Capture/Compare enable register, Offset: 0x20
	volatile uint32_t CNT;      // Counter register,                Offset: 0x24
	volatile uint32_t PSC;      // Prescaler register,              Offset: 0x28
	volatile uint32_t ARR;      // Auto-reload register,            Offset: 0x2C
	uint32_t RESERVED3;         // Reserved,                        Offset: 0x30
	volatile uint32_t CCR1;     // Capture/Compare register 1,      Offset: 0x34
	uint32_t RESERVED4[6]; // Reserved,                        Offset: 0x38 - 0x4C
	volatile uint32_t OR;       // Option register,                 Offset: 0x50
} TIM_Simple_TypeDef;

// TIM6 and TIM7 register structure (Basic timers)
typedef struct {
	volatile uint32_t CR1;      // Control register 1,              Offset: 0x00
	volatile uint32_t CR2;      // Control register 2,              Offset: 0x04
	uint32_t RESERVED1;         // Reserved,                        Offset: 0x08
	volatile uint32_t DIER;     // DMA/Interrupt enable register,   Offset: 0x0C
	volatile uint32_t SR;       // Status register,                 Offset: 0x10
	volatile uint32_t EGR;      // Event generation register,       Offset: 0x14
	uint32_t RESERVED2[3]; // Reserved,                        Offset: 0x18 - 0x20
	volatile uint32_t CNT;      // Counter register,                Offset: 0x24
	volatile uint32_t PSC;      // Prescaler register,              Offset: 0x28
	volatile uint32_t ARR;      // Auto-reload register,            Offset: 0x2C
} TIM_Basic_TypeDef;

#endif /* INC_STM32F4XX_CUS_TIMER_H_ */
