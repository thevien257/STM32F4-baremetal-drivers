#include "stm32f4xx_cus.h"
#include <string.h>

void USART_USER_INIT();
void GPIO_USER_INIT();

USART_HandleTypedef USART_Handle;
GPIO_Handle_TypeDef GPIO_Handle;

//we have 3 different messages that we transmit to arduino
//you can by all means add more messages
char *msg[3] = { "hihihihihihi123", "Hello How are you ?", "Today is Monday !" };

//reply from arduino will be stored here
char rx_buf[1024];

uint8_t g_data = 0;
uint32_t cnt = 0;

void delay(void) {
	for (uint32_t i = 0; i < 500000 / 2; i++)
		;
}

int main(void) {
	GPIO_USER_INIT();
	Get_APB1_Clock_Speed();
	USART_USER_INIT();
	IRQ_Config(USART2_IRQ38, HIGH);
//	UART_RECEIVER_ENABLE(&USART_Handle, HIGH);
//	UART_TRANSMIT_ENABLE(&USART_Handle, HIGH); // needed for printf()

	printf("Application is running\n");

	while (1) {
		// Wait for button press (PA0)
		while (!GPIO_INPUT(GPIOA, GPIO_PIN_0))
			;

		delay();  // debounce

		USART_rxCompl = 0;

		// Next message index ; make sure that cnt value doesn't cross 2
		cnt = cnt % 3;

		USART_write(&USART_Handle, (uint8_t*) msg[cnt], strlen(msg[cnt]));

		printf("Transmitted : %s\n", msg[cnt]);

		while (USART_read_IT(&USART_Handle, rx_buf, strlen(msg[cnt]))
				!= USART_READY_IT)
			;

		//just make sure that last byte should be null otherwise %s fails while printing
		rx_buf[strlen(msg[cnt]) + 1] = '\0';

		//Print what we received from the arduino
		printf("Received    : %s\n", rx_buf);

		//move on to next message indexed in msg[]
		cnt++;

	}

	return 0;
}

void USART_USER_INIT() {
	USART_Handle.USARTx = USART2;
	USART_Handle.baud_rate = USART_BAUD_115200;
	USART_Handle.data_bits = USART_8_DATA_BITS;
	USART_Handle.stop_bits = USART_1_STOP_BIT;
	USART_Handle.oversampling_mode = USART_OVERSAMPLING_16;
	USART_Handle.parity_control = USART_PARITY_DISABLE;
	USART_Handle.usart_mode = USART_MODE_ASYNC;
	USART_Handle.usart_hardware_flow_control = USART_HW_FLOW_CTRL_NONE;
	USART_INIT(&USART_Handle);
}

void GPIO_USER_INIT() {
	// USART2 pins (PA2 = TX, PA3 = RX)
	GPIO_Handle.GPIOX = GPIOA;
	GPIO_Handle.alternate_function_select = GPIO_AF7;
	GPIO_Handle.mode = GPIO_MODE_AF;
	GPIO_Handle.output_speed = GPIO_OUTPUT_SPEED_VERY_HIGH;
	GPIO_Handle.output_type = GPIO_OUTPUT_TYPE_PP;
	GPIO_Handle.pull_up_pull_down = GPIO_PUPD_PU;

	GPIO_Handle.pin_number = GPIO_PIN_2;
	GPIO_INIT(&GPIO_Handle);
	GPIO_Handle.pin_number = GPIO_PIN_3;
	GPIO_INIT(&GPIO_Handle);

	// User button (PA0)
	GPIO_Handle.pin_number = GPIO_PIN_0;
	GPIO_Handle.mode = GPIO_MODE_INPUT;
	GPIO_Handle.pull_up_pull_down = GPIO_PUPD_NONE;
	GPIO_INIT(&GPIO_Handle);
}

void USART2_IRQHandler(void) {
	USART_Handle_IT(&USART_Handle);
}
